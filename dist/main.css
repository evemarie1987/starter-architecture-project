/**
 * Import Lesshat mixins library and your personal mixins.
 */
.centerer {
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
}
.cf {
  *zoom: 1;
}
.cf:before,
.cf:after {
  content: " ";
  display: table;
}
.cf:after {
  clear: both;
}
/**
 * Set the project variables
 * colors, fonts, sizes, etc.
 */
/**
 * Project colors vars
 */
/**
 * Project font vars
 */
/**
 * Define the base project styles
 * only generic html definition, no class
 */
/**
 * Define the base project styles
 * only generic html definition, no class
 */
body {
  font-family: 'Roboto Mono', monospace;
  font-size: 12px;
}
h1,
h2,
h3,
h4,
h5 {
  font-family: 'superspitze_groteskregular';
}
label {
  cursor: pointer;
}
pre {
  border: none;
  background-color: #FFF;
}
lesshat-selector {
  -lh-property: 0; } 
::-moz-selection{color: #fff; background: #333} 
::selection{color: #fff; background: #333}
::-moz-selection{color: #fff; background: #333;
}
/**
 * Import project font(s) if needed
 */
@font-face {
  font-family: 'superspitze_groteskregular';
  src: url('../fonts/superspitzegrotesk-semibold-webfont.woff2') format('woff2'), url('../fonts/superspitzegrotesk-semibold-webfont.woff') format('woff');
  font-weight: normal;
  font-style: normal;
}
/**
 * Import OOCSS utilities
 */
.cf {
  *zoom: 1;
}
.cf:before,
.cf:after {
  content: " ";
  display: table;
}
.cf:after {
  clear: both;
}
.fl {
  float: left;
}
.fr {
  float: right;
}
.txt--black {
  color: #000;
}
.txt--white {
  color: #FFF;
}
.txt--upper {
  text-transform: uppercase;
}
.txt--lower {
  text-transform: lowercase;
}
.txt--under {
  text-decoration: underline;
}
.title--like {
  font-family: 'superspitze_groteskregular';
  font-size: 2em;
}
.neutral--link {
  color: #000;
}
.neutral--link:hover {
  color: #000;
}
/**
 * Module madness!
 * all parts of design go here
 */
.view {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}
.title__separator {
  display: block;
  width: 100px;
  height: 4px;
  margin: 20px 0;
  background-color: #333;
}
.button-link {
  display: block;
  margin-bottom: 1em;
  padding: 0 .6em;
  line-height: 3em;
  font-size: 1em;
  background-color: #333;
  color: #FFF;
  -webkit-transition-duration: 500ms;
  transition-duration: 500ms;
}
.button-link:hover {
  color: #FFF;
  background-color: #000;
}
/**
 * Project animations
 */
/**
 * Keyframes definition
 * using lesshat supermixin
 * usage : .keyframes(~'@name, @animation');
 */
lesshat-selector {
  -lh-property: 0; } 
@-webkit-keyframes slideInUp{ from { -webkit-transform:translate3d(0, 0, 0); } to { -webkit-transform: translate3d(0, 100%, 0); }}
@keyframes slideInUp{ from {-webkit-transform:translate3d(0, 0, 0);transform:translate3d(0, 0, 0); } to {-webkit-transform: translate3d(0, 100%, 0);transform: translate3d(0, 100%, 0); }}
[not-existing] {
  zoom: 1;
}
lesshat-selector {
  -lh-property: 0; } 
@-webkit-keyframes slideOutTop{ from { -webkit-transform:translate3d(0, 0, 0); } to { -webkit-transform: translate3d(0, -100%, 0); }}
@keyframes slideOutTop{ from {-webkit-transform:translate3d(0, 0, 0);transform:translate3d(0, 0, 0); } to {-webkit-transform: translate3d(0, -100%, 0);transform: translate3d(0, -100%, 0); }}
[not-existing] {
  zoom: 1;
}
lesshat-selector {
  -lh-property: 0; } 
@-webkit-keyframes slideInDown{ from { -webkit-transform:translate3d(0, 100%, 0); } to { -webkit-transform: translate3d(0, 0, 0); }}
@keyframes slideInDown{ from {-webkit-transform:translate3d(0, 100%, 0);transform:translate3d(0, 100%, 0); } to {-webkit-transform: translate3d(0, 0, 0);transform: translate3d(0, 0, 0); }}
[not-existing] {
  zoom: 1;
}
lesshat-selector {
  -lh-property: 0; } 
@-webkit-keyframes slideOutDown{ from { -webkit-transform:translate3d(0, -100%, 0); } to { -webkit-transform: translate3d(0, 0, 0); }}
@keyframes slideOutDown{ from {-webkit-transform:translate3d(0, -100%, 0);transform:translate3d(0, -100%, 0); } to {-webkit-transform: translate3d(0, 0, 0);transform: translate3d(0, 0, 0); }}
[not-existing] {
  zoom: 1;
}
lesshat-selector {
  -lh-property: 0; } 
@-webkit-keyframes wave{ 20% { opacity: 1; } 100% { -webkit-transform: scale(400); opacity: 0; }}
@keyframes wave{ 20% { opacity: 1; } 100% {-webkit-transform: scale(400);transform: scale(400); opacity: 0; }}
[not-existing] {
  zoom: 1;
}
/**
 * Angular view change animation
 */
.view--page.ng-leave {
  -webkit-animation: slideInUp 1s ease-in-out;
  animation: slideInUp 1s ease-in-out;
}
.view--page.ng-enter {
  -webkit-animation: slideInDown 1s ease-in-out;
  animation: slideInDown 1s ease-in-out;
}
.anim--wave {
  z-index: 1;
  position: relative;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
  overflow: hidden;
}
.wave {
  position: absolute;
  -webkit-border-radius: 50%;
  -webkit-background-clip: padding-box;
  -moz-border-radius: 50%;
  -moz-background-clip: padding;
  border-radius: 50%;
  background-clip: padding-box;
  zoom: 1;
  filter: alpha(opacity=100);
  -webkit-opacity: 1;
  -moz-opacity: 1;
  opacity: 1;
  z-index: -1;
  background: rgba(255, 255, 255, 0.5);
  pointer-events: none;
  width: 2px;
  height: 2px;
  -webkit-animation: wave 0.5s ease-out;
  animation: wave 0.5s ease-out;
}
/**
 * Media queries
 */

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
